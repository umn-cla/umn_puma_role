# THIS FILE IS GENERATED BY ANSIBLE. DO NOT MODIFY.
# System-level puma.rb for application {{ puma_app_name }}
# /etc/puma/{{ puma_app_name }}.rb
#
# Run with bundle exec puma -C /etc/puma/{{ puma_app_name }}.rb

# Operate in capistrano deploy current
directory '{{ puma_apps_dir }}/current'

# Rack config path (config.ru)
rackup '{{ puma_apps_dir }}/current/config.ru'

environment '{{ puma_app_env }}'

# PID file
pidfile '{{ puma_pids_dir }}/{{ puma_app_name }}.pid'

# Use “path” as the file to store the server info state. This is
# used by “pumactl” to query and control the server.
state_path '{{ puma_pids_dir }}/{{ puma_app_name }}.state'

# Log stdout and stderr
# true 3rd arg appends output
stdout_redirect '{{ puma_logs_dir }}/puma_{{ puma_app_name }}.log', '{{ puma_logs_dir }}/puma_{{ puma_app_name }}_errors.log', true

# Disable request logging
quiet false

# port
bind "tcp://0.0.0.0:{{ puma_port | default(3000) }}"

workers {{ puma_workers | default(2) }}

# Threads min, max
threads {{ puma_threads_min | default(0) }}, {{ puma_threads_max | default(16) }}

on_worker_boot do
  # Execute on worker startup
end

preload_app!

plugin :tmp_restart
