---
# Directory and permission setup
- name: Setup application directories and permissions
  block:
    - name: Create puma runtime directories
      file:
        state: directory
        path: '{{ item }}'
        owner: '{{ puma_user }}'
        group: '{{ puma_group }}'
        mode: '0755'
      loop:
        - '{{ puma_pids_dir }}'
        - '{{ puma_sockets_dir }}'
        - '{{ puma_logs_dir }}'
        - '{{ puma_configs_dir }}'
      become: true
      tags: [puma, directories]

    - name: Create application shared directories
      file:
        path: "/var/www/{{ appname_short }}/shared/{{ item }}"
        state: directory
        owner: "{{ puma_user }}"
        group: "{{ puma_group }}"
        mode: "0775"
      loop:
        - config
        - log
        - public
        - tmp
      become: true
      tags: [puma, directories]

    - name: Set shared directory permissions
      file:
        path: "/var/www/{{ appname_short }}/shared"
        state: directory
        owner: "{{ puma_user }}"
        group: "{{ puma_group }}"
        mode: "0775"
      become: true
      tags: [puma, directories]

    - name: Ensure parent directories exist and have correct permissions
      file:
        path: "/var/www/{{ appname_short }}"
        state: directory
        owner: "{{ puma_user }}"
        group: "{{ puma_group }}"
        mode: "0775"
      become: true
      tags: [puma, directories]

    - name: Ensure current directory exists and has correct permissions
      file:
        path: "/var/www/{{ appname_short }}/current"
        state: directory
        owner: "{{ puma_user }}"
        group: "{{ puma_group }}"
        mode: "0775"
      become: true
      tags: [puma, directories]
  tags: [puma, directories]

# ACL configuration
- name: Configure ACLs
  block:
    - name: Configure ACLs for nginx access
      acl:
        path: "/var/www/{{ appname_short }}"
        entity: "{{ nginx_user }}"
        etype: "user"
        permissions: "rx"
        recursive: yes
        state: "present"
        default: yes
        follow: yes
      become: true
      tags: [puma, acls]

    - name: Configure ACLs for deploy user access
      acl:
        path: "/var/www/{{ appname_short }}"
        entity: "{{ deploy_user }}"
        etype: "user"
        permissions: "rwx"
        recursive: yes
        state: "present"
        default: yes
        follow: yes
      become: true
      tags: [puma, acls]

    - name: Configure ACLs for puma service user
      acl:
        path: "/var/www/{{ appname_short }}"
        entity: "{{ puma_user }}"
        etype: "user"
        permissions: "rwx"
        recursive: yes
        state: "present"
        default: yes
        follow: yes
      become: true
      tags: [puma, acls]

    - name: Set immediate ACLs for shared directory and subfolders
      acl:
        path: "/var/www/{{ appname_short }}/shared"
        entity: "{{ deploy_user }}"
        etype: "user"
        permissions: "rwx"
        recursive: yes
        state: "present"
        follow: yes
      become: true
      tags: [puma, acls]

    - name: Set immediate ACLs for shared subdirectories
      acl:
        path: "/var/www/{{ appname_short }}/shared/{{ item }}"
        entity: "{{ deploy_user }}"
        etype: "user"
        permissions: "rwx"
        recursive: yes
        state: "present"
        follow: yes
      loop:
        - config
        - log
        - public
        - tmp
      become: true
      tags: [puma, acls]
  tags: [puma, acls]

# SELinux configuration
- name: Configure SELinux contexts
  block:
    - name: Set SELinux context for application directory
      sefcontext:
        target: "/var/www/{{ appname_short }}/current(/.*)?"
        setype: bin_t
        state: present
      become: true
      notify: restorecon
      tags: [puma, selinux]

    - name: Set SELinux context for shared directory
      sefcontext:
        target: "/var/www/{{ appname_short }}/shared(/.*)?"
        setype: bin_t
        state: present
      become: true
      notify: restorecon
      tags: [puma, selinux]

    - name: Set SELinux context for releases directory
      sefcontext:
        target: "/var/www/{{ appname_short }}/releases(/.*)?"
        setype: bin_t
        state: present
      become: true
      notify: restorecon
      tags: [puma, selinux]
  tags: [puma, selinux]

# Dependencies installation
- name: Install dependencies
  block:
    - name: Install required packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - mysql-devel
        - mysql
      become: true
      tags: [puma, packages]

    - name: Install Node.js repository
      shell: "curl -fsSL https://rpm.nodesource.com/setup_22.x | sudo bash -"
      become: true
      tags: [puma, packages]
    - name: "Install node 22"
      yum:
        name: "nodejs"
        state: "present"
    - name: Install Bundler gem
      gem:
        name: bundler
        state: present
        user_install: no
        executable: /usr/bin/gem
      become: true
      tags: [puma, packages]
  tags: [puma, packages]

# Puma installation and configuration
- name: Install and configure Puma
  block:
    - name: Install Puma gem
      gem:
        name: puma
        state: present
        user_install: no
        executable: /usr/bin/gem
      become: true
      tags: [puma, install]

    - name: Install puma configuration
      template:
        src: puma.j2
        dest: '{{ puma_configs_dir }}/puma.rb'
        owner: '{{ puma_user }}'
        group: '{{ puma_group }}'
        mode: '0644'
      become: true
      notify: restart puma
      tags: [puma, config]

    - name: Install systemd service
      template:
        src: puma.service.j2
        dest: "/etc/systemd/system/puma.service"
        owner: root
        group: root
        mode: '0644'
      become: true
      notify: reload systemd
      tags: [puma, service]

    - name: Fix Ruby gems permissions
      file:
        path: "/usr/local/lib/ruby/gems/{{ ruby_main_version }}/"
        mode: "0755"
        recurse: yes
        state: directory
      become: true
      when: ruby_version is defined
      tags: [puma, permissions]
  tags: [puma, install, config, service]

# Log rotation setup
- name: Configure log rotation
  block:
    - name: Install logrotate configuration
      template:
        src: puma.logrotate.j2
        dest: "/etc/logrotate.d/puma-{{ puma_app_name }}"
        owner: root
        group: root
        mode: '0644'
      become: true
      notify: reload logrotate
      tags: [puma, logs]

    - name: Install logrotate configuration
      template:
        src: rails.logrotate.j2
        dest: "/etc/logrotate.d/rails-{{ puma_app_name }}"
        owner: root
        group: root
        mode: '0644'
      become: true
      notify: reload logrotate
      tags: [puma, logs]
    - name: Set SELinux context for log file
      sefcontext:
        target: "/var/www/{{ appname_short }}/shared/log(/.*)?"
        setype: "httpd_log_t"

    - name: Ensure that the logs are owned by the puma user
      file:
        path: "/var/www/{{ appname_short }}/shared/log"
        owner: "{{ puma_user }}"
        group: "{{ puma_group }}"
        recurse: yes
        state: directory
      become: true
      tags: [puma, logs]
  tags: [puma, logs]

# Enable and start service
- name: Enable and start Puma service
  systemd:
    name: puma
    state: started
    enabled: true
    daemon_reload: true
  become: true
  tags: [puma, service]